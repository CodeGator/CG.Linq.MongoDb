{
  "api/CG.Linq.MongoDb.Repositories.html": {
    "href": "api/CG.Linq.MongoDb.Repositories.html",
    "title": "Namespace CG.Linq.MongoDb.Repositories",
    "keywords": "Namespace CG.Linq.MongoDb.Repositories Classes MongoDbCrudRepository<TOptions, TModel, TKey> This class is a base MongoDb implementation of the CG.Business.Repositories.ICrudRepository<TModel, TKey> interface. MongoDbCrudRepository<TOptions, TModel, TKey1, TKey2> This class is a base MongoDb implementation of the CG.Business.Repositories.ICrudRepository<TModel, TKey1, TKey2> interface. MongoDbCrudRepository<TOptions, TModel, TKey1, TKey2, TKey3> This class is a base MongoDb implementation of the CG.Business.Repositories.ICrudRepository<TModel, TKey1, TKey2, TKey3> interface. MongoDbRepository<TOptions, TModel> This class is a base MongoDb implementation of the CG.Business.Repositories.ILinqRepository<TModel> interface."
  },
  "api/CG.Linq.MongoDb.Repositories.MongoDbCrudRepository-3.html": {
    "href": "api/CG.Linq.MongoDb.Repositories.MongoDbCrudRepository-3.html",
    "title": "Class MongoDbCrudRepository<TOptions, TModel, TKey>",
    "keywords": "Class MongoDbCrudRepository<TOptions, TModel, TKey> This class is a base MongoDb implementation of the CG.Business.Repositories.ICrudRepository<TModel, TKey> interface. Inheritance System.Object CG.DisposableBase CG.Business.Repositories.RepositoryBase CG.Business.Repositories.RepositoryBase <TOptions> CG.Business.Repositories.LinqRepositoryBase <TOptions, TModel> CG.Business.Repositories.LinqRepositoryBase <TOptions, TModel, TKey> CG.Business.Repositories.CrudRepositoryBase <TOptions, TModel, TKey> MongoDbCrudRepository<TOptions, TModel, TKey> Implements CG.Business.Repositories.ICrudRepository <TModel, TKey> CG.Business.Repositories.ILinqRepository <TModel> CG.Business.Repositories.IRepository System.IDisposable Inherited Members CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey>.AddAsync(TModel, System.Threading.CancellationToken) CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey>.UpdateAsync(TModel, System.Threading.CancellationToken) CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey>.DeleteAsync(TModel, System.Threading.CancellationToken) CG.Business.Repositories.LinqRepositoryBase<TOptions, TModel>.AsQueryable() CG.Business.Repositories.RepositoryBase<TOptions>.Options CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Linq.MongoDb.Repositories Assembly : CG.Linq.MongoDb.dll Syntax public abstract class MongoDbCrudRepository<TOptions, TModel, TKey> : CrudRepositoryBase<TOptions, TModel, TKey>, ICrudRepository<TModel, TKey>, ILinqRepository<TModel>, IRepository, IDisposable where TOptions : IOptions<MongoDbRepositoryOptions> where TModel : class, IModel<TKey> where TKey : new() Type Parameters Name Description TOptions The options type associated with the repository. TModel The type of associated model. TKey The key type associated with the model. Constructors MongoDbCrudRepository(TOptions, MongoClient) This constructor creates a new instance of the MongoDbCrudRepository<TOptions, TModel, TKey> class. Declaration protected MongoDbCrudRepository(TOptions options, MongoClient client) Parameters Type Name Description TOptions options The options to use for the repository. MongoDB.Driver.MongoClient client The CosmoDb client to use with the repository. Properties Client This property contains the MongoDb client associated with the repository. Declaration protected MongoClient Client { get; set; } Property Value Type Description MongoDB.Driver.MongoClient Collection This property contains a reference to a MongoDb collection. Declaration protected IMongoCollection<TModel> Collection { get; } Property Value Type Description MongoDB.Driver.IMongoCollection <TModel> ContainerName This property contains the name of the MongoDb container. Declaration protected string ContainerName { get; set; } Property Value Type Description System.String Database This property contains a reference to a MongoDb database. Declaration protected IMongoDatabase Database { get; } Property Value Type Description MongoDB.Driver.IMongoDatabase Methods AddAsync(TModel, CancellationToken) Declaration public override Task<TModel> AddAsync(TModel model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TModel model System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TModel> Overrides CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey>.AddAsync(TModel, System.Threading.CancellationToken) AsQueryable() Declaration public override IQueryable<TModel> AsQueryable() Returns Type Description System.Linq.IQueryable <TModel> Overrides CG.Business.Repositories.LinqRepositoryBase<TOptions, TModel>.AsQueryable() DeleteAsync(TModel, CancellationToken) Declaration public override Task DeleteAsync(TModel model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TModel model System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task Overrides CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey>.DeleteAsync(TModel, System.Threading.CancellationToken) UpdateAsync(TModel, CancellationToken) Declaration public override Task<TModel> UpdateAsync(TModel model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TModel model System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TModel> Overrides CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey>.UpdateAsync(TModel, System.Threading.CancellationToken) Implements CG.Business.Repositories.ICrudRepository<TModel, TKey> CG.Business.Repositories.ILinqRepository<TModel> CG.Business.Repositories.IRepository System.IDisposable"
  },
  "api/CG.Linq.MongoDb.Repositories.MongoDbCrudRepository-4.html": {
    "href": "api/CG.Linq.MongoDb.Repositories.MongoDbCrudRepository-4.html",
    "title": "Class MongoDbCrudRepository<TOptions, TModel, TKey1, TKey2>",
    "keywords": "Class MongoDbCrudRepository<TOptions, TModel, TKey1, TKey2> This class is a base MongoDb implementation of the CG.Business.Repositories.ICrudRepository<TModel, TKey1, TKey2> interface. Inheritance System.Object CG.DisposableBase CG.Business.Repositories.RepositoryBase CG.Business.Repositories.RepositoryBase <TOptions> CG.Business.Repositories.LinqRepositoryBase <TOptions, TModel> CG.Business.Repositories.LinqRepositoryBase <TOptions, TModel, TKey1, TKey2> CG.Business.Repositories.CrudRepositoryBase <TOptions, TModel, TKey1, TKey2> MongoDbCrudRepository<TOptions, TModel, TKey1, TKey2> Implements CG.Business.Repositories.ICrudRepository <TModel, TKey1, TKey2> CG.Business.Repositories.ILinqRepository <TModel> CG.Business.Repositories.IRepository System.IDisposable Inherited Members CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.AddAsync(TModel, System.Threading.CancellationToken) CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.UpdateAsync(TModel, System.Threading.CancellationToken) CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.DeleteAsync(TModel, System.Threading.CancellationToken) CG.Business.Repositories.LinqRepositoryBase<TOptions, TModel>.AsQueryable() CG.Business.Repositories.RepositoryBase<TOptions>.Options CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Linq.MongoDb.Repositories Assembly : CG.Linq.MongoDb.dll Syntax public abstract class MongoDbCrudRepository<TOptions, TModel, TKey1, TKey2> : CrudRepositoryBase<TOptions, TModel, TKey1, TKey2>, ICrudRepository<TModel, TKey1, TKey2>, ILinqRepository<TModel>, IRepository, IDisposable where TOptions : IOptions<MongoDbRepositoryOptions> where TModel : class, IModel<TKey1, TKey2> where TKey1 : new() where TKey2 : new() Type Parameters Name Description TOptions The options type associated with the repository. TModel The type of associated model. TKey1 The key 1 type associated with the model. TKey2 The key 2 type associated with the model. Constructors MongoDbCrudRepository(TOptions, MongoClient) This constructor creates a new instance of the MongoDbCrudRepository<TOptions, TModel, TKey1, TKey2> class. Declaration protected MongoDbCrudRepository(TOptions options, MongoClient client) Parameters Type Name Description TOptions options The options to use for the repository. MongoDB.Driver.MongoClient client The CosmoDb client to use with the repository. Properties Client This property contains the MongoDb client associated with the repository. Declaration protected MongoClient Client { get; set; } Property Value Type Description MongoDB.Driver.MongoClient Collection This property contains a reference to a MongoDb collection. Declaration protected IMongoCollection<TModel> Collection { get; } Property Value Type Description MongoDB.Driver.IMongoCollection <TModel> ContainerName This property contains the name of the MongoDb container. Declaration protected string ContainerName { get; set; } Property Value Type Description System.String Database This property contains a reference to a MongoDb database. Declaration protected IMongoDatabase Database { get; } Property Value Type Description MongoDB.Driver.IMongoDatabase Methods AddAsync(TModel, CancellationToken) Declaration public override Task<TModel> AddAsync(TModel model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TModel model System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TModel> Overrides CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.AddAsync(TModel, System.Threading.CancellationToken) AsQueryable() Declaration public override IQueryable<TModel> AsQueryable() Returns Type Description System.Linq.IQueryable <TModel> Overrides CG.Business.Repositories.LinqRepositoryBase<TOptions, TModel>.AsQueryable() DeleteAsync(TModel, CancellationToken) Declaration public override Task DeleteAsync(TModel model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TModel model System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task Overrides CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.DeleteAsync(TModel, System.Threading.CancellationToken) UpdateAsync(TModel, CancellationToken) Declaration public override Task<TModel> UpdateAsync(TModel model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TModel model System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TModel> Overrides CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey1, TKey2>.UpdateAsync(TModel, System.Threading.CancellationToken) Implements CG.Business.Repositories.ICrudRepository<TModel, TKey1, TKey2> CG.Business.Repositories.ILinqRepository<TModel> CG.Business.Repositories.IRepository System.IDisposable"
  },
  "api/CG.Linq.MongoDb.Repositories.MongoDbCrudRepository-5.html": {
    "href": "api/CG.Linq.MongoDb.Repositories.MongoDbCrudRepository-5.html",
    "title": "Class MongoDbCrudRepository<TOptions, TModel, TKey1, TKey2, TKey3>",
    "keywords": "Class MongoDbCrudRepository<TOptions, TModel, TKey1, TKey2, TKey3> This class is a base MongoDb implementation of the CG.Business.Repositories.ICrudRepository<TModel, TKey1, TKey2, TKey3> interface. Inheritance System.Object CG.DisposableBase CG.Business.Repositories.RepositoryBase CG.Business.Repositories.RepositoryBase <TOptions> CG.Business.Repositories.LinqRepositoryBase <TOptions, TModel> CG.Business.Repositories.LinqRepositoryBase <TOptions, TModel, TKey1, TKey2, TKey3> CG.Business.Repositories.CrudRepositoryBase <TOptions, TModel, TKey1, TKey2, TKey3> MongoDbCrudRepository<TOptions, TModel, TKey1, TKey2, TKey3> Implements CG.Business.Repositories.ICrudRepository <TModel, TKey1, TKey2, TKey3> CG.Business.Repositories.ILinqRepository <TModel> CG.Business.Repositories.IRepository System.IDisposable Inherited Members CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.AddAsync(TModel, System.Threading.CancellationToken) CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.UpdateAsync(TModel, System.Threading.CancellationToken) CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.DeleteAsync(TModel, System.Threading.CancellationToken) CG.Business.Repositories.LinqRepositoryBase<TOptions, TModel>.AsQueryable() CG.Business.Repositories.RepositoryBase<TOptions>.Options CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Linq.MongoDb.Repositories Assembly : CG.Linq.MongoDb.dll Syntax public abstract class MongoDbCrudRepository<TOptions, TModel, TKey1, TKey2, TKey3> : CrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>, ICrudRepository<TModel, TKey1, TKey2, TKey3>, ILinqRepository<TModel>, IRepository, IDisposable where TOptions : IOptions<MongoDbRepositoryOptions> where TModel : class, IModel<TKey1, TKey2, TKey3> where TKey1 : new() where TKey2 : new() where TKey3 : new() Type Parameters Name Description TOptions The options type associated with the repository. TModel The type of associated model. TKey1 The key 1 type associated with the model. TKey2 The key 2 type associated with the model. TKey3 The key 3 type associated with the model. Constructors MongoDbCrudRepository(TOptions, MongoClient) This constructor creates a new instance of the MongoDbCrudRepository<TOptions, TModel, TKey1, TKey2, TKey3> class. Declaration protected MongoDbCrudRepository(TOptions options, MongoClient client) Parameters Type Name Description TOptions options The options to use for the repository. MongoDB.Driver.MongoClient client The CosmoDb client to use with the repository. Properties Client This property contains the MongoDb client associated with the repository. Declaration protected MongoClient Client { get; set; } Property Value Type Description MongoDB.Driver.MongoClient Collection This property contains a reference to a MongoDb collection. Declaration protected IMongoCollection<TModel> Collection { get; } Property Value Type Description MongoDB.Driver.IMongoCollection <TModel> ContainerName This property contains the name of the MongoDb container. Declaration protected string ContainerName { get; set; } Property Value Type Description System.String Database This property contains a reference to a MongoDb database. Declaration protected IMongoDatabase Database { get; } Property Value Type Description MongoDB.Driver.IMongoDatabase Methods AddAsync(TModel, CancellationToken) Declaration public override Task<TModel> AddAsync(TModel model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TModel model System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TModel> Overrides CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.AddAsync(TModel, System.Threading.CancellationToken) AsQueryable() Declaration public override IQueryable<TModel> AsQueryable() Returns Type Description System.Linq.IQueryable <TModel> Overrides CG.Business.Repositories.LinqRepositoryBase<TOptions, TModel>.AsQueryable() DeleteAsync(TModel, CancellationToken) Declaration public override Task DeleteAsync(TModel model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TModel model System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task Overrides CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.DeleteAsync(TModel, System.Threading.CancellationToken) UpdateAsync(TModel, CancellationToken) Declaration public override Task<TModel> UpdateAsync(TModel model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TModel model System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TModel> Overrides CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey1, TKey2, TKey3>.UpdateAsync(TModel, System.Threading.CancellationToken) Implements CG.Business.Repositories.ICrudRepository<TModel, TKey1, TKey2, TKey3> CG.Business.Repositories.ILinqRepository<TModel> CG.Business.Repositories.IRepository System.IDisposable"
  },
  "api/CG.Linq.MongoDb.Repositories.MongoDbRepository-2.html": {
    "href": "api/CG.Linq.MongoDb.Repositories.MongoDbRepository-2.html",
    "title": "Class MongoDbRepository<TOptions, TModel>",
    "keywords": "Class MongoDbRepository<TOptions, TModel> This class is a base MongoDb implementation of the CG.Business.Repositories.ILinqRepository<TModel> interface. Inheritance System.Object CG.DisposableBase CG.Business.Repositories.RepositoryBase CG.Business.Repositories.RepositoryBase <TOptions> CG.Business.Repositories.LinqRepositoryBase <TOptions, TModel> MongoDbRepository<TOptions, TModel> Implements CG.Business.Repositories.ILinqRepository <TModel> CG.Business.Repositories.IRepository System.IDisposable Inherited Members CG.Business.Repositories.LinqRepositoryBase<TOptions, TModel>.AsQueryable() CG.Business.Repositories.RepositoryBase<TOptions>.Options CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Linq.MongoDb.Repositories Assembly : CG.Linq.MongoDb.dll Syntax public abstract class MongoDbRepository<TOptions, TModel> : LinqRepositoryBase<TOptions, TModel>, ILinqRepository<TModel>, IRepository, IDisposable where TOptions : IOptions<MongoDbRepositoryOptions> where TModel : class, IModel Type Parameters Name Description TOptions The options type associated with the repository. TModel The model type associated with the repository. Constructors MongoDbRepository(TOptions, MongoClient) This constructor creates a new instance of the MongoDbRepository<TOptions, TModel> class. Declaration protected MongoDbRepository(TOptions options, MongoClient client) Parameters Type Name Description TOptions options The options to use for the repository. MongoDB.Driver.MongoClient client The CosmoDb client to use with the repository. Properties Client This property contains the MongoDb client associated with the repository. Declaration protected MongoClient Client { get; set; } Property Value Type Description MongoDB.Driver.MongoClient Collection This property contains a reference to a MongoDb collection. Declaration protected IMongoCollection<TModel> Collection { get; } Property Value Type Description MongoDB.Driver.IMongoCollection <TModel> ContainerName This property contains the name of the MongoDb container. Declaration protected string ContainerName { get; set; } Property Value Type Description System.String Database This property contains a reference to a MongoDb database. Declaration protected IMongoDatabase Database { get; } Property Value Type Description MongoDB.Driver.IMongoDatabase Methods AsQueryable() Declaration public override IQueryable<TModel> AsQueryable() Returns Type Description System.Linq.IQueryable <TModel> Overrides CG.Business.Repositories.LinqRepositoryBase<TOptions, TModel>.AsQueryable() Implements CG.Business.Repositories.ILinqRepository<TModel> CG.Business.Repositories.IRepository System.IDisposable"
  },
  "api/CG.Linq.MongoDb.Repositories.Options.html": {
    "href": "api/CG.Linq.MongoDb.Repositories.Options.html",
    "title": "Namespace CG.Linq.MongoDb.Repositories.Options",
    "keywords": "Namespace CG.Linq.MongoDb.Repositories.Options Classes MongoDbRepositoryOptions This class contains configuration settings for a MongodDb repository."
  },
  "api/CG.Linq.MongoDb.Repositories.Options.MongoDbRepositoryOptions.html": {
    "href": "api/CG.Linq.MongoDb.Repositories.Options.MongoDbRepositoryOptions.html",
    "title": "Class MongoDbRepositoryOptions",
    "keywords": "Class MongoDbRepositoryOptions This class contains configuration settings for a MongodDb repository. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase CG.Business.Repositories.Options.RepositoryOptions MongoDbRepositoryOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Linq.MongoDb.Repositories.Options Assembly : CG.Linq.MongoDb.dll Syntax public class MongoDbRepositoryOptions : RepositoryOptions, IValidatableObject Properties DatabaseId This property contains the database identifier to use with the repository. Declaration [Required(ErrorMessageResourceName = \"MongoDbRepositoryOptions_DbId\", ErrorMessageResourceType = typeof(Resources))] public string DatabaseId { get; set; } Property Value Type Description System.String DropDatabase This property indicates whether the database should be dropped, if it already exists (or not). Note, this step is only ever performed when running in the Development environment, in order to prevent horrible accidents in production. Declaration public bool DropDatabase { get; set; } Property Value Type Description System.Boolean EnsureCreated This property indicates whether the database should be created, if needed, at startup (or not). Note, this step is only ever performed when running in the Development environment, in order to prevent horrible accidents in production. Declaration public bool EnsureCreated { get; set; } Property Value Type Description System.Boolean SeedDatabase This property indicates whether the database should be seeded with data, if needed, at startup (or not). Note, this step is only ever performed when running in the Development environment, in order to prevent horrible accidents in production. Declaration public bool SeedDatabase { get; set; } Property Value Type Description System.Boolean Uri This property contains the Uri to use with the repository. Declaration [Required(ErrorMessageResourceName = \"MongoDbRepositoryOptions_Uri\", ErrorMessageResourceType = typeof(Resources))] public string Uri { get; set; } Property Value Type Description System.String Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions",
    "keywords": "Class ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type. Inheritance System.Object ApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Linq.MongoDb.dll Syntax public static class ApplicationBuilderExtensions Methods UseCosmoDb<TClient, TOptions>(IApplicationBuilder, SeedAction<TClient>) This method performs any startup logic required by MongoDb, such as dropping the underlying database (if needed), or creating the underlying database (if needed), or adding seed data to an otherwise blank database. Declaration public static IApplicationBuilder UseCosmoDb<TClient, TOptions>(this IApplicationBuilder applicationBuilder, SeedAction<TClient> seedDelegate) where TClient : MongoClient where TOptions : MongoDbRepositoryOptions Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. SeedAction <TClient> seedDelegate A delegate for seeding the database with startup data. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder The value of the applicationBuilder parameter, for chaining calls together. Type Parameters Name Description TClient The type of associated client. TOptions The type of associated options. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more arguments are invalid, or missing."
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type. Delegates SeedAction<TClient> This delegate type represents a callback to seed a database."
  },
  "api/Microsoft.AspNetCore.Builder.SeedAction-1.html": {
    "href": "api/Microsoft.AspNetCore.Builder.SeedAction-1.html",
    "title": "Delegate SeedAction<TClient>",
    "keywords": "Delegate SeedAction<TClient> This delegate type represents a callback to seed a database. Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Linq.MongoDb.dll Syntax public delegate void SeedAction<in TClient>(TClient client, bool wasDropped, bool wasCreated) where TClient : MongoClient; Parameters Type Name Description TClient client The MongoDb client to use for the operation. System.Boolean wasDropped Indicates whether the data-context was recently dropped. System.Boolean wasCreated Indicates whether the data-context was recently created. Type Parameters Name Description TClient The type of associated MongoDb client."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type."
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Linq.MongoDb.dll Syntax public static class ServiceCollectionExtensions Methods AddMongoDbRepositories<TOptions>(IServiceCollection, IConfiguration, ServiceLifetime) This method loads and registers MongoDb specific repository options. Declaration public static IServiceCollection AddMongoDbRepositories<TOptions>(this IServiceCollection serviceCollection, IConfiguration configuration, ServiceLifetime serviceLifetime = ServiceLifetime.Scoped) where TOptions : MongoDbRepositoryOptions, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Type Parameters Name Description TOptions The type of associated repository options. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more arguments are invalid, or missing."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Linq.MongoDb.dll contains LINQ extensions used by other CodeGator packages."
  }
}