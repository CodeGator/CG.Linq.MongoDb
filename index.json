{
  "api/CG.Linq.MongoDb.Repositories.html": {
    "href": "api/CG.Linq.MongoDb.Repositories.html",
    "title": "Namespace CG.Linq.MongoDb.Repositories",
    "keywords": "Namespace CG.Linq.MongoDb.Repositories Classes MongoDbCrudRepository<TOptions, TModel, TKey> This class is a base MongoDb implementation of the CG.Business.Repositories.ICrudRepository<TModel, TKey> interface. MongoDbRepository<TOptions, TModel> This class is a base MongoDb implementation of the CG.Business.Repositories.ILinqRepository<TModel> interface."
  },
  "api/CG.Linq.MongoDb.Repositories.MongoDbCrudRepository-3.html": {
    "href": "api/CG.Linq.MongoDb.Repositories.MongoDbCrudRepository-3.html",
    "title": "Class MongoDbCrudRepository<TOptions, TModel, TKey>",
    "keywords": "Class MongoDbCrudRepository<TOptions, TModel, TKey> This class is a base MongoDb implementation of the CG.Business.Repositories.ICrudRepository<TModel, TKey> interface. Inheritance System.Object CG.DisposableBase CG.Business.Repositories.RepositoryBase CG.Business.Repositories.RepositoryBase <TOptions> CG.Business.Repositories.LinqRepositoryBase <TOptions, TModel> CG.Business.Repositories.LinqRepositoryBase <TOptions, TModel, TKey> CG.Business.Repositories.CrudRepositoryBase <TOptions, TModel, TKey> MongoDbCrudRepository<TOptions, TModel, TKey> Implements CG.Business.Repositories.ICrudRepository <TModel, TKey> CG.Business.Repositories.ILinqRepository <TModel> CG.Business.Repositories.IRepository System.IDisposable Inherited Members CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey>.AddAsync(TModel, System.Threading.CancellationToken) CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey>.UpdateAsync(TModel, System.Threading.CancellationToken) CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey>.DeleteAsync(TModel, System.Threading.CancellationToken) CG.Business.Repositories.LinqRepositoryBase<TOptions, TModel>.AsQueryable() CG.Business.Repositories.RepositoryBase<TOptions>.Options CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Linq.MongoDb.Repositories Assembly : CG.Linq.MongoDb.dll Syntax public abstract class MongoDbCrudRepository<TOptions, TModel, TKey> : CrudRepositoryBase<TOptions, TModel, TKey>, ICrudRepository<TModel, TKey>, ILinqRepository<TModel>, IRepository, IDisposable where TOptions : IOptions<MongoDbRepositoryOptions> where TModel : class, IModel<TKey> where TKey : new() Type Parameters Name Description TOptions The options type associated with the repository. TModel The type of associated model. TKey The key type associated with the model. Constructors MongoDbCrudRepository(TOptions, MongoClient) This constructor creates a new instance of the MongoDbCrudRepository<TOptions, TModel, TKey> class. Declaration protected MongoDbCrudRepository(TOptions options, MongoClient client) Parameters Type Name Description TOptions options The options to use for the repository. MongoDB.Driver.MongoClient client The CosmoDb client to use with the repository. Properties Client This property contains the MongoDb client associated with the repository. Declaration protected MongoClient Client { get; set; } Property Value Type Description MongoDB.Driver.MongoClient Collection This property contains a reference to a MongoDb collection. Declaration protected IMongoCollection<TModel> Collection { get; } Property Value Type Description MongoDB.Driver.IMongoCollection <TModel> ContainerName This property contains the name of the MongoDb container. Declaration protected string ContainerName { get; set; } Property Value Type Description System.String Database This property contains a reference to a MongoDb database. Declaration protected IMongoDatabase Database { get; } Property Value Type Description MongoDB.Driver.IMongoDatabase Methods AddAsync(TModel, CancellationToken) Declaration public override Task<TModel> AddAsync(TModel model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TModel model System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TModel> Overrides CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey>.AddAsync(TModel, System.Threading.CancellationToken) AsQueryable() Declaration public override IQueryable<TModel> AsQueryable() Returns Type Description System.Linq.IQueryable <TModel> Overrides CG.Business.Repositories.LinqRepositoryBase<TOptions, TModel>.AsQueryable() DeleteAsync(TModel, CancellationToken) Declaration public override Task DeleteAsync(TModel model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TModel model System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task Overrides CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey>.DeleteAsync(TModel, System.Threading.CancellationToken) UpdateAsync(TModel, CancellationToken) Declaration public override Task<TModel> UpdateAsync(TModel model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TModel model System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TModel> Overrides CG.Business.Repositories.CrudRepositoryBase<TOptions, TModel, TKey>.UpdateAsync(TModel, System.Threading.CancellationToken) Implements CG.Business.Repositories.ICrudRepository<TModel, TKey> CG.Business.Repositories.ILinqRepository<TModel> CG.Business.Repositories.IRepository System.IDisposable"
  },
  "api/CG.Linq.MongoDb.Repositories.MongoDbRepository-2.html": {
    "href": "api/CG.Linq.MongoDb.Repositories.MongoDbRepository-2.html",
    "title": "Class MongoDbRepository<TOptions, TModel>",
    "keywords": "Class MongoDbRepository<TOptions, TModel> This class is a base MongoDb implementation of the CG.Business.Repositories.ILinqRepository<TModel> interface. Inheritance System.Object CG.DisposableBase CG.Business.Repositories.RepositoryBase CG.Business.Repositories.RepositoryBase <TOptions> CG.Business.Repositories.LinqRepositoryBase <TOptions, TModel> MongoDbRepository<TOptions, TModel> Implements CG.Business.Repositories.ILinqRepository <TModel> CG.Business.Repositories.IRepository System.IDisposable Inherited Members CG.Business.Repositories.LinqRepositoryBase<TOptions, TModel>.AsQueryable() CG.Business.Repositories.RepositoryBase<TOptions>.Options CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Linq.MongoDb.Repositories Assembly : CG.Linq.MongoDb.dll Syntax public abstract class MongoDbRepository<TOptions, TModel> : LinqRepositoryBase<TOptions, TModel>, ILinqRepository<TModel>, IRepository, IDisposable where TOptions : IOptions<MongoDbRepositoryOptions> where TModel : class, IModel Type Parameters Name Description TOptions The options type associated with the repository. TModel The model type associated with the repository. Constructors MongoDbRepository(TOptions, MongoClient) This constructor creates a new instance of the MongoDbRepository<TOptions, TModel> class. Declaration protected MongoDbRepository(TOptions options, MongoClient client) Parameters Type Name Description TOptions options The options to use for the repository. MongoDB.Driver.MongoClient client The CosmoDb client to use with the repository. Properties Client This property contains the MongoDb client associated with the repository. Declaration protected MongoClient Client { get; set; } Property Value Type Description MongoDB.Driver.MongoClient Collection This property contains a reference to a MongoDb collection. Declaration protected IMongoCollection<TModel> Collection { get; } Property Value Type Description MongoDB.Driver.IMongoCollection <TModel> ContainerName This property contains the name of the MongoDb container. Declaration protected string ContainerName { get; set; } Property Value Type Description System.String Database This property contains a reference to a MongoDb database. Declaration protected IMongoDatabase Database { get; } Property Value Type Description MongoDB.Driver.IMongoDatabase Methods AsQueryable() Declaration public override IQueryable<TModel> AsQueryable() Returns Type Description System.Linq.IQueryable <TModel> Overrides CG.Business.Repositories.LinqRepositoryBase<TOptions, TModel>.AsQueryable() Implements CG.Business.Repositories.ILinqRepository<TModel> CG.Business.Repositories.IRepository System.IDisposable"
  },
  "api/CG.Linq.MongoDb.Repositories.Options.html": {
    "href": "api/CG.Linq.MongoDb.Repositories.Options.html",
    "title": "Namespace CG.Linq.MongoDb.Repositories.Options",
    "keywords": "Namespace CG.Linq.MongoDb.Repositories.Options Classes MongoDbRepositoryOptions This class contains configuration settings for a MongodDb repository."
  },
  "api/CG.Linq.MongoDb.Repositories.Options.MongoDbRepositoryOptions.html": {
    "href": "api/CG.Linq.MongoDb.Repositories.Options.MongoDbRepositoryOptions.html",
    "title": "Class MongoDbRepositoryOptions",
    "keywords": "Class MongoDbRepositoryOptions This class contains configuration settings for a MongodDb repository. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase CG.Business.Repositories.Options.RepositoryOptions MongoDbRepositoryOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Linq.MongoDb.Repositories.Options Assembly : CG.Linq.MongoDb.dll Syntax public class MongoDbRepositoryOptions : RepositoryOptions, IValidatableObject Properties DatabaseId This property contains the database identifier to use with the repository. Declaration [Required(ErrorMessageResourceName = \"MongoDbRepositoryOptions_DbId\", ErrorMessageResourceType = typeof(Resources))] public string DatabaseId { get; set; } Property Value Type Description System.String Uri This property contains the Uri to use with the repository. Declaration [Required(ErrorMessageResourceName = \"MongoDbRepositoryOptions_Uri\", ErrorMessageResourceType = typeof(Resources))] public string Uri { get; set; } Property Value Type Description System.String Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Linq.MongoDb.dll contains LINQ extensions used by other CodeGator packages."
  }
}